{"version":3,"sources":["firebase/firebase-config.js","types/types.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/login/LoginScreen.jsx","components/login/RegisterScreen.jsx","data/heroes.js","components/hero/HeroCard.jsx","components/hero/HeroList.jsx","selectors/getHeroesByPublisher.js","components/dc/DcScreen.jsx","components/hero/HeroScreen.jsx","selectors/getHeroById.js","components/marvel/MarvelScreen.jsx","components/search/SearchScreen.jsx","selectors/getHeroesByName.js","components/ui/Navbar.jsx","routers/DashboardRouter.jsx","routers/PrivateRouter.js","routers/PublicRouter.js","routers/AppRouter.jsx","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","HeroesApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setError","err","type","payload","finishLoading","startLoginWithEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","user","login","uid","displayName","catch","e","console","log","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","checked","value","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","preventDefault","htmlFor","id","onChange","disabled","onClick","signInWithPopup","to","RegisterScreen","msgError","password2","terms","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","a","updateProfile","startRegisterWithEmailPassword","role","autoComplete","required","heroes","HeroCard","superhero","alter_ego","publisher","first_appearance","characters","src","style","maxHeight","objectFit","alt","HeroList","useMemo","filter","hero","getHeroesByPublisher","map","DcScreen","HeroScreen","heroId","useParams","navigate","useNavigate","find","getHeroById","MarvelScreen","SearchScreen","location","useLocation","queryString","parse","search","q","searchText","searchHeroes","toLowerCase","includes","getHeroesByName","placeholder","Navbar","isActive","signOut","DashboardRouter","path","element","PrivateRouter","children","isLogged","pathname","localStorage","setItem","PublicRouter","lastPath","getItem","AppRouter","setIsLogged","isNotReady","setisNotReady","useEffect","onAuthStateChanged","width","height","reducers","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","HeroesApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f40ad79a.chunk.js","sourcesContent":["// v9 compat packages are API compatible with v8 code\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\n\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyByF_5J4pNNZPryG1xDKuE4yTjAEhswkFI\",\r\n  authDomain: \"react-auth-app-14089.firebaseapp.com\",\r\n  projectId: \"react-auth-app-14089\",\r\n  storageBucket: \"react-auth-app-14089.appspot.com\",\r\n  messagingSenderId: \"1087135847650\",\r\n  appId: \"1:1087135847650:web:4b120186a6469c1e527abb\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    firebase,\r\n    db,\r\n    googleAuthProvider\r\n}","export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n}","import { types } from \"../types/types\"\r\n\r\nexport const setError = (err) => {\r\n    return{\r\n        type: types.uiSetError,\r\n        payload: err\r\n    }\r\n}\r\nexport const removeError = () => {\r\n    return{\r\n        type: types.uiRemoveError,\r\n    }\r\n}\r\n\r\nexport const startLoading = () => {\r\n    return{\r\n        type: types.uiStartLoading\r\n    }\r\n}\r\nexport const finishLoading = () => {\r\n    return{\r\n        type: types.uiFinishLoading\r\n    }\r\n}","import { firebase, googleAuthProvider } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\"\r\nimport { finishLoading, startLoading } from \"./ui\";\r\n\r\nexport const startLoginWithEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        dispatch( startLoading() );\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( ({ user }) => {\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                dispatch( finishLoading() )\r\n            })\r\n            .catch( (e) => {\r\n                dispatch( finishLoading() )\r\n                console.log(e)\r\n            })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPassword = ( email, password, name ) => {\r\n    return(dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        .then( async ({ user }) => {\r\n            await user.updateProfile({ displayName: name });\r\n            dispatch( login(user.uid, user.displayName) )\r\n        })\r\n        .catch( (e) => {\r\n                    console.log(e)\r\n                })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n        .then( ({ user }) => {\r\n            dispatch( login(user.uid, user.displayName) )\r\n        })\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n    return({\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    })\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return ( async(dispatch) => {\r\n\r\n        await firebase.auth().signOut();\r\n        \r\n        dispatch( logout() );\r\n\r\n    } )\r\n}\r\n\r\nconst logout = () => {\r\n    return ({\r\n        type: types.logout\r\n    })\r\n}","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        if(target.type === 'checkbox')\r\n        {\r\n            setValues({\r\n                ...values,\r\n                [ target.name ]: target.checked\r\n            });\r\n        } else {\r\n   \r\n            setValues({\r\n                ...values,\r\n                [ target.name ]: target.value\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\n// import { useNavigate } from 'react-router-dom'\r\nimport GoogleButton from 'react-google-button'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { startGoogleLogin, startLoginWithEmailPassword } from '../../actions/auth'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\n\r\nconst LoginScreen = () => {\r\n\r\n    // const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector(state => state.ui)\r\n    // console.log(loading)\r\n    \r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: 'prueba@gmail.com',\r\n        password: '123456'\r\n    });\r\n    \r\n    const { email, password } = formValues;\r\n\r\n    const handleGoogleLogin = () => {\r\n        console.log('Google Login TODO')\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        // dispatch(login('81as9ww1c8w', 'Andrés Ramírez'));\r\n        dispatch( startLoginWithEmailPassword(email, password) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Login Screen</h1>\r\n\r\n            <hr />\r\n\r\n            <form onSubmit={ handleLogin }>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\r\n                    <input \r\n                        type=\"email\" \r\n                        className=\"form-control\" \r\n                        id=\"exampleInputEmail1\" \r\n                        aria-describedby=\"emailHelp\"\r\n                        name=\"email\"\r\n                        value={ email }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\r\n                    <input \r\n                        type=\"password\" \r\n                        className=\"form-control\" \r\n                        id=\"exampleInputPassword1\" \r\n                        name=\"password\"\r\n                        value={ password }\r\n                        onChange={ handleInputChange }\r\n                        />\r\n                </div>\r\n                <button \r\n                    type=\"submit\"\r\n                    disabled={ loading }\r\n                    className=\"btn btn-outline-dark w-100\"\r\n                >\r\n                    Login with email and password\r\n                </button>\r\n            </form>\r\n\r\n            <div className=\"mt-3\">\r\n                <p>\r\n                    or\r\n                </p>\r\n                <GoogleButton type='dark' onClick={ handleGoogleLogin } />\r\n\r\n                <hr />\r\n                <Link to=\"/register\">\r\n                    Create an account\r\n                </Link>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default LoginScreen\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator';\r\nimport { startRegisterWithEmailPassword } from '../../actions/auth';\r\nimport { removeError, setError } from '../../actions/ui';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nconst RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { msgError } = useSelector(state => state.ui)\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: 'Andrés',\r\n        email: 'prueba@gmail.com',\r\n        password: '123456',\r\n        password2: '123456',\r\n        terms: true\r\n    });\r\n    \r\n    const { name, email, password, password2, terms } = formValues;\r\n\r\n    const isFormValid = () => {\r\n        if(name.trim().length < 2){\r\n            // console.log('El nombre debe ser de 2 o más caracteres');\r\n            dispatch( setError('El nombre debe ser de 2 o más caracteres') );\r\n            return false;\r\n        }\r\n        if( (password.length < 6) || (password !== password2) ){\r\n            // console.log('Las contraseñas deben ser iguales y de 6 o más caracteres');\r\n            dispatch( setError('Las contraseñas deben ser iguales y de 6 o más caracteres') );\r\n            return false;\r\n        }\r\n        if( !validator.isEmail(email) ){\r\n            dispatch( setError('El correo no es válido') );\r\n            // console.log('El correo no es válido');\r\n            return false;\r\n        }\r\n        if( !terms ){\r\n            dispatch( setError('Debe confirmar los términos para continuar') );\r\n            // console.log('El correo no es válido');\r\n            return false;\r\n        }\r\n        dispatch( removeError() );\r\n        return true;\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        \r\n        // console.log(name, email, password, password2, terms)\r\n        if( isFormValid() ){\r\n            dispatch( startRegisterWithEmailPassword(email, password, name) );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Register Screen</h1>\r\n\r\n            <hr />\r\n\r\n            <form onSubmit={ handleRegister }>\r\n                {\r\n                    msgError && (\r\n                        <div className=\"alert alert-danger animate__animated animate__fadeIn\" role=\"alert\">\r\n                            { msgError }\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputName\" className=\"form-label\">Name</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        id=\"exampleInputName\" \r\n                        name=\"name\"\r\n                        value={ name }\r\n                        onChange={ handleInputChange }\r\n                        autoComplete=\"off\"\r\n                        required\r\n                        />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\r\n                    <input \r\n                        type=\"email\" \r\n                        className=\"form-control\" \r\n                        id=\"exampleInputEmail1\" \r\n                        aria-describedby=\"emailHelp\"\r\n                        name=\"email\"\r\n                        value={ email }\r\n                        onChange={ handleInputChange }\r\n                        autoComplete=\"off\"\r\n                        required\r\n                    />\r\n                    <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\r\n                    <input \r\n                        type=\"password\" \r\n                        className=\"form-control\" \r\n                        id=\"exampleInputPassword1\" \r\n                        name=\"password\"\r\n                        value={ password }\r\n                        onChange={ handleInputChange }\r\n                        autoComplete=\"off\"\r\n                        required\r\n                        />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputPassword2\" className=\"form-label\">Confirm Password</label>\r\n                    <input \r\n                        type=\"password\" \r\n                        className=\"form-control\" \r\n                        id=\"exampleInputPassword2\" \r\n                        name=\"password2\"\r\n                        value={ password2 }\r\n                        onChange={ handleInputChange }\r\n                        autoComplete=\"off\"\r\n                        required\r\n                        />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <input \r\n                        type=\"checkbox\" \r\n                        className=\"form-check-input\" \r\n                        id=\"exampleCheckbox1\" \r\n                        name=\"terms\"\r\n                        onChange={ handleInputChange }\r\n                        checked={ terms }\r\n                        \r\n                        />\r\n                        <label htmlFor=\"exampleCheckbox1\" className=\"form-check-label ms-2\">Confirm terms</label>\r\n\r\n                </div>\r\n \r\n                <button type=\"submit\" className=\"btn btn-outline-dark w-100\">Create Account</button>\r\n            </form>\r\n\r\n            <div className=\"mt-3\">\r\n\r\n                <hr />\r\n                <Link to=\"/login\">\r\n                    Already have an account? Sign in\r\n                </Link>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HeroCard = ({ id, superhero, publisher, alter_ego, first_appearance, characters  }) => {\r\n    return (\r\n        <div>\r\n            <div key={id} className=\"col animate__animated animate__fadeIn\">\r\n                        <div className=\"card h-100\">\r\n                            <div className=\"col-5 align-self-center\">\r\n                                <img src={`/assets/${id}.jpg`} style={{maxHeight: '100px', objectFit: 'scale-down'}} className=\"card-img-top\" alt={superhero} />\r\n                            </div>\r\n                            <div className =\"card-body\">\r\n                                <h3 className =\"card-title\">{ superhero }</h3>\r\n\r\n                                <ul className=\"list-group list-group-flush\">\r\n                                    <li className=\"list-group-item\"> { alter_ego } </li>\r\n                                    <li className=\"list-group-item\"> { first_appearance } </li>\r\n                                    <li className=\"list-group-item\"> {characters} </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                            <Link\r\n                                to={`/hero/${id}`}\r\n                            >\r\n                                Ver más ...\r\n                            \r\n                            </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroCard\r\n","import React, { useMemo } from 'react'\r\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\r\nimport HeroCard from './HeroCard';\r\n\r\n\r\n\r\nconst HeroList = ({ publisher }) => {\r\n\r\n    const heroes = useMemo(() => getHeroesByPublisher(publisher), [publisher]);\r\n\r\n    return (\r\n        <div className=\"row row-cols-1 row-cols-md-4 row-cols-lg-3 g-4 animate__animated animate__fadeIn\">\r\n            {\r\n                heroes.map( hero => {\r\n                    return (\r\n                        <HeroCard key={hero.id} {...hero} />\r\n                    )\r\n                } )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroList\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesByPublisher = publisher => {\r\n\r\n    return heroes.filter( hero => hero.publisher === publisher );\r\n\r\n}","import React from 'react'\r\nimport HeroList from '../hero/HeroList';\r\n\r\nconst DcScreen = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"animate__animated animate__fadeInLeft\">DC Screen</h1>\r\n            \r\n            <hr />\r\n            \r\n            <HeroList publisher='DC Comics' />\r\n        \r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DcScreen\r\n","import React, { useMemo } from 'react'\r\nimport { useParams, Navigate, useNavigate } from 'react-router-dom'\r\nimport { getHeroById } from '../../selectors/getHeroById';\r\n\r\nconst HeroScreen = () => {\r\n\r\n    const { heroId } = useParams();\r\n    const navigate = useNavigate()\r\n\r\n    const hero = useMemo(() => getHeroById(heroId), [heroId]);\r\n    \r\n    if(!hero){\r\n        return <Navigate to='/marvel' />\r\n    }\r\n    const { id, superhero, publisher, alter_ego, first_appearance, characters  } = hero;\r\n\r\n    const handleReturn = () => {\r\n        navigate(-1);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1> { publisher } </h1>\r\n            <hr />\r\n\r\n            <div key={id} className=\"col-4 mx-auto\">\r\n                        <div className=\"card h-100\">\r\n                            <div className=\"col-5 align-self-center\">\r\n                                <img src={`/assets/${id}.jpg`} className=\"card-img-top\" alt={superhero} />\r\n                            </div>\r\n                            <div className =\"card-body\">\r\n                                <h3 className =\"card-title\">{ superhero }</h3>\r\n\r\n                                <ul className=\"list-group list-group-flush\">\r\n                                    <li className=\"list-group-item\"><b> Alter Ego: </b> { alter_ego } </li>\r\n                                    <li className=\"list-group-item\"> <b> First appearance: </b> { first_appearance } </li>\r\n                                    <li className=\"list-group-item\"> <b> Character: </b> {characters} </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                            <div className=\"card-footer text-end\">\r\n                            <button \r\n                                className=\"btn btn-primary\"\r\n                                onClick={ handleReturn }\r\n                            >\r\n                                Regresar\r\n                            </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroScreen\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroById = id => {\r\n\r\n    return heroes.find( hero => hero.id === id );\r\n\r\n}","import React from 'react'\r\nimport HeroList from '../hero/HeroList';\r\n\r\nconst MarvelScreen = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Marvel Screen</h1>\r\n            \r\n            <hr />\r\n\r\n            \r\n            <HeroList publisher='Marvel Comics' />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarvelScreen\r\n","import React, { useMemo } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport queryString from 'query-string'\r\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\r\nimport HeroCard from '../hero/HeroCard';\r\n\r\nconst SearchScreen = () => {\r\n\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const { q = '' } = queryString.parse(location.search);\r\n    \r\n    const [ formValues, handleInputChange ] = useForm({\r\n        searchText : q\r\n    });\r\n\r\n    const { searchText } = formValues;\r\n\r\n    const searchHeroes = useMemo(() => getHeroesByName(q), [q]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        navigate(`?q=${searchText}`)\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Search Screen</h1>\r\n            <hr />\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <h3>\r\n                        Búsqueda de Héroes\r\n                    </h3>\r\n\r\n                    <form onSubmit={ handleSubmit } >\r\n\r\n                        <input \r\n                            type=\"text\"\r\n                            placeholder=\"Ingrese el nombre del héroe\"\r\n                            className=\"form-control mt-4\"\r\n                            name=\"searchText\"\r\n                            autoComplete=\"off\"\r\n                            value={ searchText }\r\n                            onChange={ handleInputChange }\r\n                        />\r\n\r\n                        <button\r\n                            className=\"btn btn-primary mt-3\" \r\n                            type=\"submit\">\r\n                            Buscar\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-7\">\r\n                    <h3>\r\n                        Resultados\r\n                    </h3>\r\n                    <hr />\r\n                        {\r\n                            searchHeroes.map(hero => <HeroCard key={hero.id} {...hero} />)\r\n                        }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchScreen\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesByName = (name = '') => {\r\n    \r\n    console.log('getHeroesByName');\r\n    \r\n    if(name.length === 0){\r\n        return [];\r\n    }\r\n    \r\n    name = name.toLowerCase()\r\n    return heroes.filter( hero => hero.superhero.toLowerCase().includes(name) )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nconst Navbar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n\r\n        dispatch( startLogout() );\r\n\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark px-5\">\r\n                <Link \r\n                    className=\"navbar-brand\" \r\n                    to=\"/\"\r\n                >\r\n                    Navbar\r\n                </Link>\r\n\r\n          \r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                    <div className=\"navbar-nav\">\r\n                        \r\n                        <NavLink \r\n                            className={ ({ isActive }) => 'nav-link ' + (isActive? 'active' : '')}\r\n                            to=\"/dc\">\r\n                                DC\r\n                        </NavLink>\r\n                        \r\n                        <NavLink \r\n                            className={ ({ isActive }) => 'nav-link ' + (isActive? 'active' : '')} \r\n                            to=\"/marvel\"\r\n                        >\r\n                                Marvel\r\n                        </NavLink>\r\n                        <NavLink \r\n                            className={ ({ isActive }) => 'nav-link ' + (isActive? 'active' : '')} \r\n                            to=\"/search\">\r\n                                Search\r\n                        </NavLink>\r\n                    \r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2 d-flex justify-content-end\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <span className=\"nav-item nav-link text-info\">\r\n                            { name }\r\n                        </span>\r\n                        <button \r\n                            className=\"nav-item nav-link btn\"\r\n                            onClick={ handleLogout }\r\n                        >\r\n                            Logout\r\n                        </button>\r\n                    </ul>\r\n                </div>\r\n\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport { Routes, Route } from 'react-router-dom'\r\nimport DcScreen from '../components/dc/DcScreen'\r\nimport HeroScreen from '../components/hero/HeroScreen'\r\nimport MarvelScreen from '../components/marvel/MarvelScreen'\r\nimport SearchScreen from '../components/search/SearchScreen'\r\nimport Navbar from '../components/ui/Navbar'\r\n\r\nconst DashboardRouter = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"container mt-5\">\r\n                <Routes>\r\n                    <Route path=\"/\" element={<MarvelScreen />} />\r\n                    <Route path=\"/dc\" element={<DcScreen />} />\r\n                    <Route path=\"/marvel\" element={<MarvelScreen />} />\r\n                    <Route path=\"/search\" element={<SearchScreen />} />\r\n\r\n                    <Route path=\"/hero/:heroId\" element={<HeroScreen />} />\r\n                </Routes>\r\n            </div>            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashboardRouter\r\n","import React from 'react'\r\n// import { useSelector } from 'react-redux';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\n// import { AuthContext } from '../auth/authContext'\r\n\r\nconst PrivateRouter = ({ children, isLogged }) => {\r\n\r\n    // const { user } = useContext( AuthContext );\r\n    // const { uid } = useSelector(state => state.auth)\r\n    const { pathname, search } = useLocation();\r\n\r\n    localStorage.setItem('lastPath', pathname + search );\r\n    \r\n    return isLogged\r\n        ? children\r\n        : <Navigate to=\"/login\" />\r\n}\r\n\r\nexport default PrivateRouter\r\n","import React from 'react'\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst PublicRouter = ({ children, isLogged }) => {\r\n    const lastPath = localStorage.getItem('lastPath') || '/marvel';\r\n\r\n    return !isLogged\r\n        ? children\r\n        : <Navigate to={ lastPath } />\r\n}\r\n\r\nexport default PublicRouter\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport { login } from '../actions/auth';\r\n\r\nimport LoginScreen from '../components/login/LoginScreen';\r\nimport RegisterScreen from '../components/login/RegisterScreen';\r\nimport DashboardRouter from './DashboardRouter';\r\nimport PrivateRouter from './PrivateRouter';\r\nimport PublicRouter from './PublicRouter';\r\nimport { firebase } from '../firebase/firebase-config'\r\n\r\n\r\nconst AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [isLogged, setIsLogged] = useState(false);\r\n    const [isNotReady, setisNotReady] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( (user) =>{\r\n            if(user?.uid){\r\n                setIsLogged(true);\r\n                dispatch( login(user.uid, user.displayName) )\r\n            } else {\r\n                setIsLogged(false);\r\n            }\r\n            setisNotReady(false);\r\n        } )\r\n    }, [dispatch])\r\n\r\nif(isNotReady){\r\n    return(\r\n        <div className=\"d-flex justify-content-center mt-5\">\r\n\r\n            <div className=\"spinner-grow text-danger\" role=\"status\" style={{ width: '3rem', height: '3rem' }}>\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n    return (\r\n        <BrowserRouter>        \r\n            <Routes>\r\n                {/* <Route path=\"/login\" element={<LoginScreen />} /> */}\r\n                <Route path=\"/register\" element={<RegisterScreen />} />\r\n                <Route path=\"/login\" element={\r\n                    <PublicRouter isLogged={ isLogged }>\r\n                        <LoginScreen />\r\n                    </PublicRouter>\r\n                } />\r\n\r\n\r\n                <Route path=\"/*\" element={\r\n                    <PrivateRouter isLogged={ isLogged }>\r\n                        <DashboardRouter />\r\n                    </PrivateRouter>\r\n                } />\r\n\r\n            </Routes>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading : false,\r\n    msgError : null\r\n}\r\n\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer\r\n})\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n    )","import { types } from \"../types/types\";\r\n\r\n// state = {\r\n//     uid='4as4f6s51s16v6svsdc',\r\n//     displayName: 'Daniel Duque'\r\n// }\r\n\r\n\r\nexport const authReducer = (state = {}, action) =>{\r\n    switch (action.type) {\r\n        case types.login:\r\n            return{\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return{ }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport AppRouter from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nconst HeroesApp = () => {\r\n\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default HeroesApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport HeroesApp from './HeroesApp';\nimport './index.css';\n\nReactDOM.render(\n  <HeroesApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}